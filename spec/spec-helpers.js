// Generated by CoffeeScript 1.3.1
(function() {
  var SpecHelpers, toEqualArray, trimBlanks;

  SpecHelpers = (function() {

    SpecHelpers.name = 'SpecHelpers';

    function SpecHelpers() {
      this.lines = [];
    }

    SpecHelpers.prototype.beforeEach = function(suite) {
      var _this = this;
      this.lines = [];
      console.table.logger = function(line) {
        return _this.consoleLog(line);
      };
      return suite.addMatchers({
        toEqualArray: toEqualArray
      });
    };

    SpecHelpers.prototype.afterEach = function() {
      console.table.logger = null;
      return this.lines = null;
    };

    SpecHelpers.prototype.getLines = function() {
      return this.lines;
    };

    SpecHelpers.prototype.consoleLog = function(line) {
      return this.lines.push(line);
    };

    return SpecHelpers;

  })();

  trimBlanks = function(string) {
    return string.replace(/^\s+|\s+$/g, "");
  };

  toEqualArray = function(expected) {
    var aItem, eItem, i, _i, _ref;
    if (typeof expected === "string") {
      expected = trimBlanks(expected);
      expected = expected.split("\n");
    }
    if (this.actual.length !== expected.length) {
      return false;
    }
    for (i = _i = 0, _ref = this.actual.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      aItem = this.actual[i];
      eItem = expected[i];
      if (aItem !== eItem) {
        return false;
      }
    }
    return true;
  };

  if (typeof require === "undefined") {
    window.SpecHelpers = SpecHelpers;
  } else {
    module.exports = SpecHelpers;
  }

}).call(this);
