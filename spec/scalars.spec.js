// Generated by CoffeeScript 1.3.1

/* Licensed under the Apache License, Version 2.0. See footer for details
*/


(function() {
  var specHelpers;

  specHelpers = new (require("./spec-helpers"));

  describe("console.table(scalar)", function() {
    beforeEach(function() {
      return specHelpers.beforeEach(this);
    });
    afterEach(function() {
      return specHelpers.afterEach(this);
    });
    it("should handle console.table(null)", function() {
      var lines;
      console.table(null);
      lines = specHelpers.getLines();
      return expect(lines).toEqualLines("| value |\n---------\n| null  |");
    });
    it("should handle console.table(undefined)", function() {
      var lines;
      console.table(void 0);
      lines = specHelpers.getLines();
      return expect(lines).toEqualLines("| value |\n---------\n|       |");
    });
    it("should handle console.table('x')", function() {
      var lines;
      console.table('x');
      lines = specHelpers.getLines();
      return expect(lines).toEqualLines("| value |\n---------\n| x     |");
    });
    it("should handle console.table(1)", function() {
      var lines;
      console.table(1);
      lines = specHelpers.getLines();
      return expect(lines).toEqualLines("| value |\n---------\n| 1     |");
    });
    it("should handle console.table(false)", function() {
      var lines;
      console.table(false);
      lines = specHelpers.getLines();
      return expect(lines).toEqualLines("| value |\n---------\n| false |");
    });
    it("should handle console.table(function)", function() {
      var lines;
      console.table(function() {});
      lines = specHelpers.getLines();
      return expect(lines).toEqualLines("||");
    });
    it("should handle console.table(NaN)", function() {
      var lines;
      console.table(1 / 'x');
      lines = specHelpers.getLines();
      return expect(lines).toEqualLines("| value |\n---------\n| NaN   |");
    });
    return xit("should ...", function() {
      var line, lines, _i, _len, _results;
      console.table(null);
      lines = specHelpers.getLines();
      expect(lines).toEqualLines("");
      _results = [];
      for (_i = 0, _len = lines.length; _i < _len; _i++) {
        line = lines[_i];
        _results.push(console.log(line));
      }
      return _results;
    });
  });

  /*        
  #-------------------------------------------------------------------------------
  # Copyright 2012 Patrick Mueller
  # 
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  # 
  #    http://www.apache.org/licenses/LICENSE-2.0
  # 
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
  #-------------------------------------------------------------------------------
  */


}).call(this);
