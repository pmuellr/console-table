// Generated by CoffeeScript 1.3.1
(function() {
  var SpecHelpers, specHelpers;

  if (typeof require === "undefined") {
    SpecHelpers = window.SpecHelpers;
  } else {
    console.table = require("../lib/console-table");
    SpecHelpers = require("./spec-helpers");
  }

  specHelpers = new SpecHelpers;

  describe("console.table(scalar)", function() {
    beforeEach(function() {
      return specHelpers.beforeEach(this);
    });
    afterEach(function() {
      return specHelpers.afterEach(this);
    });
    it("should handle console.table(null)", function() {
      var lines;
      console.table(null);
      lines = specHelpers.getLines();
      return expect(lines).toEqualArray("| value |\n---------\n| null  |");
    });
    it("should handle console.table(undefined)", function() {
      var lines;
      console.table(void 0);
      lines = specHelpers.getLines();
      return expect(lines).toEqualArray("| value |\n---------\n|       |");
    });
    it("should handle console.table('x')", function() {
      var lines;
      console.table('x');
      lines = specHelpers.getLines();
      return expect(lines).toEqualArray("| value |\n---------\n| x     |");
    });
    it("should handle console.table(1)", function() {
      var lines;
      console.table(1);
      lines = specHelpers.getLines();
      return expect(lines).toEqualArray("| value |\n---------\n| 1     |");
    });
    it("should handle console.table(false)", function() {
      var lines;
      console.table(false);
      lines = specHelpers.getLines();
      return expect(lines).toEqualArray("| value |\n---------\n| false |");
    });
    it("should handle console.table(function)", function() {
      var lines;
      console.table(function() {});
      lines = specHelpers.getLines();
      return expect(lines).toEqualArray("||");
    });
    it("should handle console.table(NaN)", function() {
      var lines;
      console.table(1 / 'x');
      lines = specHelpers.getLines();
      return expect(lines).toEqualArray("| value |\n---------\n| NaN   |");
    });
    return xit("should ...", function() {
      var line, lines, _i, _len, _results;
      console.table(null);
      lines = specHelpers.getLines();
      expect(lines).toEqualArray("");
      _results = [];
      for (_i = 0, _len = lines.length; _i < _len; _i++) {
        line = lines[_i];
        _results.push(console.log(line));
      }
      return _results;
    });
  });

}).call(this);
